<!doctype html>
<html class="no-js" lang="en">
<head>
  <meta charset="utf-8">
  <title>NIH Calendar of Events</title>
  <base href="/">
  <meta name="DESCRIPTION" content="NIH Calendar of Events" />
  <meta name="KEYWORDS" content="news, events, meetings, calendar, calendars, NIH, Health, National, Institute, Institutes, seminars, CME" />
  <!--<meta name="viewport" content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width, height=device-height, target-densitydpi=device-dpi" />-->
  <meta name="viewport" content="width=device-width, initial-scale=.5, maximum-scale=1, minimum-scale=.5, target-densitydpi=device-dpi" />
  <link rel="icon" type="image/x-icon" href="favicon.ico">
  <!-- Google tag (gtag.js) -->
  <script async src="https://www.googletagmanager.com/gtag/js?id=G-T7P7890KR2"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'G-T7P7890KR2');
  </script>
  <script src="https://www.google.com/recaptcha/api.js" async defer></script>
  <script type="text/javascript" src="modernizr.js"></script>
  <script type="text/javascript">
    function checkMobileDevice ()
    {
      var hasTouchScreen = false;

      if ("maxTouchPoints" in navigator) { 
          hasTouchScreen = navigator.maxTouchPoints > 0;
      } else if ("msMaxTouchPoints" in navigator) {
          hasTouchScreen = navigator.msMaxTouchPoints > 0; 
      } else {
          var mQ = window.matchMedia && matchMedia("(pointer:coarse)");
          if (mQ && mQ.media === "(pointer:coarse)") {
              hasTouchScreen = !!mQ.matches;
          } else if ('orientation' in window) {
              hasTouchScreen = true; // deprecated, but good fallback
          } else {
              // Only as a last resort, fall back to user agent sniffing
              var UA = navigator.userAgent;
              hasTouchScreen = (
                  /\b(BlackBerry|webOS|iPhone|IEMobile)\b/i.test(UA) ||
                  /\b(Android|Windows Phone|iPad|iPod)\b/i.test(UA)
              );
          }
      }

      navigator.browserSpecs = (function(){
          var ua = navigator.userAgent, tem, 
              M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
          if(/trident/i.test(M[1])){
              tem = /\brv[ :]+(\d+)/g.exec(ua) || [];
              return {name:'IE',version:(tem[1] || '')};
          }
          if(M[1]=== 'Chrome'){
              tem = ua.match(/\b(OPR|Edge)\/(\d+)/);
              if(tem != null) return {name:tem[1].replace('OPR', 'Opera'),version:tem[2]};
          }
          M = M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?'];
          if((tem = ua.match(/version\/(\d+)/i))!= null)
              M.splice(1, 1, tem[1]);
          return {name:M[0], version:M[1]};
      })();

      Modernizr.addTest('ipad', function () {
        return !!navigator.userAgent.match(/iPad/i);
      });

      Modernizr.addTest('iphone', function () {
        return !!navigator.userAgent.match(/iPhone/i);
      });

      Modernizr.addTest('ipod', function () {
        return !!navigator.userAgent.match(/iPod/i);
      });

      Modernizr.addTest('appleios', function () {
        return (Modernizr.ipad || Modernizr.ipod || Modernizr.iphone);
      });

      Modernizr.addTest('androidos', function () {
        return !!navigator.userAgent.match(/Android|webOS|Opera Mini/i);
      });

      Modernizr.addTest('mobiles', function () {
        return (Modernizr.appleios || Modernizr.androidos);
      });

      Modernizr.addTest('mobile1', function () {
        return !!navigator.userAgent.match(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i);
      });

      Modernizr.addTest('mobile2', function () {
        return !!navigator.userAgent.match(/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i);
      });

      var smallScreen = Modernizr.mq('only screen and (max-width: 860px)');

      /*
      var output = 'Detecting browsers: ';
          output += 'hasTouchScreen: ' + hasTouchScreen + ' ';
          output += 'navigator.browserSpecs.name: ' + navigator.browserSpecs.name + ' ';
          output += 'navigator.browserSpecs.version: ' + navigator.browserSpecs.version + ' ';
          output += 'Modernizr.ipad: ' + Modernizr.ipad + ' ';
          output += 'Modernizr.ipod: ' + Modernizr.ipod + ' ';
          output += 'Modernizr.iphone: ' + Modernizr.iphone + ' ';
          output += 'Modernizr.appleios: ' + Modernizr.appleios + ' ';
          output += 'Modernizr.androidos: ' + Modernizr.androidos + ' ';
          output += 'Modernizr.mobile1: ' + Modernizr.mobile1 + ' ';
          output += 'Modernizr.mobile2: ' + Modernizr.mobile2 + ' ';
          output += 'smallScreen: ' + smallScreen + ' ';
          output += 'Modernizr.canvas: ' + Modernizr.canvas + ' ';
          output += 'Modernizr.websockets: ' + Modernizr.websockets + ' ';
          output += 'Modernizr.touchevents: ' + Modernizr.touchevents + ' ';

      alert (output);
      */
    
      var iBrowserVersion = 0;

      try {
        iBrowserVersion = parseInt(navigator.browserSpecs.version);
      }
      catch(err) {
      
      }

      var isSPA = false;
      var isMobile = false;
      var isLegacy = false;

      if ((Modernizr.canvas) && (Modernizr.websockets) && (Modernizr.touchevents)) {
        if (((Modernizr.iphone) || (Modernizr.androidos)) && (hasTouchScreen) && (smallScreen)) {
          isSPA = false;
          isMobile = true;
          isLegacy = false;
        } else {
          isSPA = true;
          isMobile = false;
          isLegacy = false;
        }
      } else if ((Modernizr.canvas) && (Modernizr.websockets) && ((navigator.browserSpecs.name === 'Chrome') || (navigator.browserSpecs.name === 'Firefox') || ((navigator.browserSpecs.name === 'Safari') && (iBrowserVersion >= 13)))) {
        isSPA = true;
        isMobile = false;
        isLegacy = false;
      } else {
        isSPA = false;
        isMobile = false;
        isLegacy = true;
      }

      var getUrl = window.location;
      var rootUrl = getUrl .protocol + "//" + getUrl.host + "/";
      var baseUrl = getUrl .protocol + "//" + getUrl.host + "/" + getUrl.pathname.split('/')[1];
      var a1 = "";
      var a2 = "";
      var a3 = "";

      try {
        a1 = getUrl.pathname.split('/')[1];
      }
      catch(err) {
      
      }

      try {
        a2 = getUrl.pathname.split('/')[2];
      }
      catch(err) {
      
      }

      try {
        a3 = getUrl.pathname.split('/')[3];
      }
      catch(err) {
      
      }

      var b1 = "";
	  
      if ((isSPA === false) && (isMobile === false) && (isLegacy === true)) {
        if ((a1 === 'event') && (a2 === 'view') && (a3 !== '')) {
          b1 = rootUrl + 'lega/app/MCalInfoView.aspx?EvtID=' + a3;
        } else {
          b1 = rootUrl + 'lega/app/MCalWelcome.aspx';
        } 
      } else if ((isSPA === false) && (isMobile === true) && (isLegacy === false)) {
        if ((a1 === 'event') && (a2 === 'view') && (a3 !== '')) {
          b1 = rootUrl + 'mobi/?evID=' + a3;
        } else {
          b1 = rootUrl + 'mobi/';
        }
      }

      if (b1 !== '') {
        window.location.replace(b1);
      }
    }
  </script>
  <script async type="text/javascript" id="_fed_an_ua_tag" src="https://dap.digitalgov.gov/Universal-Federated-Analytics-Min.js?agency=HHS&subagency=NIH"></script>
<link rel="stylesheet" href="styles.e157733236a26cc6645b.css"></head>
<body class="page-root" onload="checkMobileDevice()">
  <app-root></app-root>
<script src="polyfills-nomodule-es5.b79bfebc521ac1ea1602.js" nomodule></script><script src="runtime-es2015.c55dbf991056e7ed9aac.js" type="module"></script><script src="runtime-es5.c55dbf991056e7ed9aac.js" nomodule defer></script><script src="polyfills-es5.be5e7100556cefe27e31.js" nomodule defer></script><script src="polyfills-es2015.c9ed17774fc015b86cd6.js" type="module"></script><script src="scripts.dd41b09b45089fd35c11.js" defer></script><script src="main-es2015.72c2de6a828823cb447c.js" type="module"></script><script src="main-es5.72c2de6a828823cb447c.js" nomodule defer></script></body>
</html>
